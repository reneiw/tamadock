version: '3.5'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}
services:

  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./workspace
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_GRPC=${WORKSPACE_INSTALL_GRPC}
        - INSTALL_PROTOBUF=${WORKSPACE_INSTALL_PROTOBUF}
        - INSTALL_SOCKETS=${WORKSPACE_INSTALL_SOCKETS}
        - INSTALL_XLS_WRITER=${WORKSPACE_INSTALL_XLS_WRITER}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    ports:
      - "8000:8000"
    networks:
      - frontend
      - backend

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_GRPC=${PHP_FPM_INSTALL_GRPC}
        - INSTALL_PROTOBUF=${PHP_FPM_INSTALL_PROTOBUF}
        - INSTALL_SOCKETS=${PHP_FPM_INSTALL_SOCKETS}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_XLS_WRITER=${PHP_FPM_INSTALL_XLS_WRITER}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PGID}
        - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    ports:
      - "${PHP_FPM_XDEBUG_PORT}:9003"
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    depends_on:
      - workspace
    networks:
      - backend

  ### PHP Worker ###########################################
  php-worker:
    build:
      context: ./php-worker
      args:
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
        - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
        - INSTALL_GRPC=${PHP_WORKER_INSTALL_GRPC}
        - INSTALL_PROTOBUF=${PHP_WORKER_INSTALL_PROTOBUF}
        - PUID=${PHP_WORKER_PUID}
        - PGID=${PHP_WORKER_PGID}
        - IMAGEMAGICK_VERSION=${PHP_WORKER_IMAGEMAGICK_VERSION}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    ports:
      - "10000:10000"
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend


  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_HOST="%"
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INIT_DB}:/docker-entrypoint-init-db.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
    platform: ${MYSQL_PLATFORM}

  ### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
  mailhog:
    build: ./mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - frontend
      - backend

  ### ElasticSearch ########################################
  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        - ELK_VERSION=${ELK_VERSION}
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONFIG_PATH}/analysis:/usr/share/elasticsearch/config/analysis
    environment:
      - cluster.name=laradock-cluster
      - node.name=laradock-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.initial_master_nodes=laradock-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
